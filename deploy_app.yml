---
- hosts: webservers
  become: yes
  vars:
    app_name: my_web_app
    app_dir: /var/www/my_web_app
    repo_url: https://github.com/yourusername/my_web_app.git
    service_name: my_web_app

  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - git
        - python3
        - python3-pip
        - nginx

    - name: Clone the repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: master
        force: yes

    - name: Install Python dependencies
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ app_dir }}/venv"
        virtualenv_command: python3 -m venv
        virtualenv_python: python3

    - name: Configure systemd service for the app
      copy:
        dest: /etc/systemd/system/{{ service_name }}.service
        content: |
          [Unit]
          Description=Gunicorn instance to serve {{ app_name }}
          After=network.target

          [Service]
          User=www-data
          Group=www-data
          WorkingDirectory={{ app_dir }}
          Environment="PATH={{ app_dir }}/venv/bin"
          ExecStart={{ app_dir }}/venv/bin/gunicorn --workers 3 --bind unix:{{ app_name }}.sock wsgi:app

          [Install]
          WantedBy=multi-user.target
      notify: 
        - Restart the app service

    - name: Start and enable the app service
      systemd:
        name: "{{ service_name }}"
        enabled: yes
        state: started

    - name: Configure Nginx to proxy requests to the app
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}
      notify:
        - Reload Nginx

    - name: Enable Nginx site configuration
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link

    - name: Remove default Nginx site configuration
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Reload Nginx

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded

    - name: Restart the app service
      systemd:
        name: "{{ service_name }}"
        state: restarted
